# CONFIG
include $(RULES)/configure/CONFIG_APP
include $(RULES)/configure/lib.mk

# Make any application-specific changes to the EPICS build
# configuration variables in this file.

# Tools: location, flags, and environment settings

EPICS_HOST_ARCH := $(shell $(EPICS_BASE)/startup/EpicsHostArch)

EXTENSIONS_HOST_BIN := /opt/Epics/extensions/bin/${EPICS_HOST_ARCH}

DBST := $(EXTENSIONS_HOST_BIN)/dbst
MSI := $(EXTENSIONS_HOST_BIN)/msi

BII_SCRIPTS_BIN := /opt/csr/bin
BII_SCRIPTS_LIB := /opt/csr/lib
CREATE_DB_BIN := /opt/csr/bin

RULES_PERL5LIB=$(BII_SCRIPTS_LIB)/perl
RULES_PYTHONPATH=$(BII_SCRIPTS_LIB)/python

USR_PERL5LIB=
USR_PYTHONPATH=

PERL = PERL5LIB=$(call list_to_searchpath,$(USR_PERL5LIB) $(RULES_PERL5LIB)) perl
PYTHON = PYTHONPATH=$(call list_to_searchpath,$(USR_PYTHONPATH) $(RULES_PYTHONPATH)) python

# vdct's flatdb tool (expands hierarchical vdb files)
# should be in the path
FLATDB_FLAGS =
FLATDB = $(PERL) $(BII_SCRIPTS_BIN)/flatdb

USR_CREATE_PANEL_FLAGS =
CREATE_PANEL = $(PERL) $(BII_SCRIPTS_BIN)/CreatePanel.pl $(DL_INCLUDES)
CREATE_DB = $(CREATE_DB_BIN)/CreateDb -q

MAKE_DOC_TXT = $(PERL) $(BII_SCRIPTS_BIN)/makeDocTxt.pl
MAKE_DOC_PERL = $(PERL) $(BII_SCRIPTS_BIN)/makeDocPerl.pl
MAKE_DOC_COMMON_INDEX = $(PERL) $(BII_SCRIPTS_BIN)/makeDocCommonIndex.pl

STRIP_UNRESOLVED = $(PERL) $(BII_SCRIPTS_BIN)/stripUnresolvedDb.pl

SCH2DB_FLAGS = -s $(CAPFAST_TEMPLATES)
SCH2DB = $(PERL) $(BII_SCRIPTS_BIN)/Sch2db.pl

DB_REQUEST = $(BII_SCRIPTS_BIN)/db_request.py

# dbst based database optimization (default: NO)
DB_OPT := NO

# Warning: dbst and flatdb both need a dbd file to work.
# The default is to use DBDNAME, if defined, else for a db target
# named xxx.db look for a dbd file named xxx.dbd, else fail.

# Set this when you only want to compile this application
# for a subset of the cross-compiled target architectures
# that Base is built for.
#CROSS_COMPILER_TARGET_ARCHS = vxWorks-68040

# Set this when your IOC and the host use different paths
# to access the application. This will be needed to boot
# from a Microsoft FTP server or with some NFS mounts.
# You must rebuild in the iocBoot directory for this to
# take effect.
#IOCS_APPL_TOP = <path to application top as seen by IOC>

INSTALL_BOOT := $(INSTALL_LOCATION)/iocBoot
INSTALL_SHARE := $(INSTALL_LOCATION)/share
INSTALL_DL := $(INSTALL_LOCATION)/dl
INSTALL_ETC := $(INSTALL_LOCATION)/etc

DOC_APPDIR := $(subst /O.$(T_A),,$(subst $(shell cd $(TOP); /bin/pwd)/,,$(shell /bin/pwd)))

INSTALL_DOC := $(INSTALL_LOCATION)/doc/$(DOC_APPDIR)

UNINSTALL_DIRS += $(INSTALL_BOOT) $(INSTALL_SHARE) $(INSTALL_DL)
UNINSTALL_DIRS += $(INSTALL_ETC) $(INSTALL_LOCATION)/doc

# uncomment this line if APP_DEPENDS should be ignored
#IGNORE_APP_DEPENDS = YES

ifneq '$(IGNORE_APP_DEPENDS)' 'YES'
MADE := .made.

ifeq '$(MAKELEVEL)' '0'
install: clean_made_apps

clean_made_apps:
	@#echo !!!!!!!!! cleaning MADE !!!!!!!!!!!!!!
	@$(RM) $(wildcard $(INSTALL_LOCATION)/$(MADE)*)

.PHONY: clean_made_apps
endif
endif
